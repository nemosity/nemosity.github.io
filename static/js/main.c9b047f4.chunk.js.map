{"version":3,"sources":["../node_modules/@iag-packages/chroma-datepicker/lib/css/brand sync /^/.//.*//Datepicker/.css$","components/Dropdown/Dropdown.js","utils/componentMap.js","utils/dynamicFormUtils.js","components/FlowSlider/FlowSlider.js","constants/actionTypes.js","actions/formActions.js","containers/ChromaDynamicForm.js","components/ProgressBar/ProgressBar.js","actions/schemaActions.js","App.js","serviceWorker.js","utils/stateSelectors.js","validation/formValidation.js","sagas/form.js","sagas/schema.js","sagas/index.js","reducers/formReducer.js","reducers/schemaReducer.js","reducers/index.js","store/configureStore.js","index.js"],"names":["map","./ami/Datepicker.css","./bendigo/Datepicker.css","./cgu/Datepicker.css","./coles/Datepicker.css","./core/Datepicker.css","./nrma/Datepicker.css","./racv/Datepicker.css","./sgic/Datepicker.css","./sgio/Datepicker.css","./state/Datepicker.css","./wfi/Datepicker.css","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","Dropdown","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","values","label","value","disabled","props","src","fetch","response","json","data","setTimeout","_this2","setState","console","log","_context","t0","react_default","a","createElement","components","assign","className","Component","componentMap","ActionList","Alert","Autocomplete","BackedByIag","Button","ButtonGroup","Card","Checkbox","Container","Content","DatePicker","DetailList","Footer","Form","FormContainer","FormGroup","FormMain","GridColumn","GridRow","getAssetsPath","Header","Icon","InlineLoader","Input","InputMask","List","Loader","Main","Modal","Radio","RadioBlock","RadioButton","Select","Textarea","generateForm","schema","form","onUpdate","errors","processNode","Array","isArray","apply","Fragment","concat","toConsumableArray","x","groupId","elements","widget","showIf","_get","error","for","name","onChange","payload","date","placeholder","defaultValue","FlowSlider","sliderSettings","accessibility","arrows","dots","infinite","initialSlide","step","speed","slidesToShow","slidesToScroll","swipe","swipeToSlide","touchMove","variableWidth","prevProps","slider","slickGoTo","_this$props","children","lib_default","ref","container","index","aria-hidden","key","style","width","actionTypes","SCHEMA","ERROR","LOAD","UPDATE","FORM","CLEAR","MOVE_NEXT","MOVE_BACK","INPUT","STEP","VALIDATE","VALIDATE_FAIL","clearForm","createAction","ActionTypes","updateForm","moveBack","validateForm","App","renderAlert","patterns","icon","type","valid","inline","length","components_FlowSlider_FlowSlider","page","i","minHeight","content","onUpdateForm","tracking","onClick","onMoveBack","tertiary","outline","onValidateForm","primary","connect","_ref","input","parsedSchema","dispatch","path","ProgressBar","currentStep","initialPercentage","totalSteps","progress","Math","max","min","defaultProps","updateSchema","JSON","parse","pageId","components_ProgressBar_ProgressBar","sectionCompleteIcon","layouts","title","brand","renderProgressBar","rows","onSchemaUpdate","target","stringify","sample1","sample2","sample3","readonly","onClearForm","ChromaDynamicForm","rawSchema","_ref2","Boolean","window","location","hostname","match","getFormInput","getParsedSchema","item","validateNode","validation","required","_set","pattern","RegExp","test","minLength","maxLength","doValidateForm","doMoveNext","moveNext","action","regenerator_default","wrap","prev","next","select","sent","Number","isInteger","put","stop","_marked","_context2","takeLatest","_marked2","nextStep","shouldSkipStep","_context3","_marked3","_context4","_marked4","doLoadSchema","loadSchema","schema_marked","schema_marked2","rootSaga","all","fork","sagas_marked","initialState","visitedSteps","combineReducers","arguments","undefined","_setFp","objectSpread","slice","sagaMiddleware","createSagaMiddleware","store","middlewares","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","run","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c9b047f4.chunk.js","sourcesContent":["var map = {\n\t\"./ami/Datepicker.css\": 373,\n\t\"./bendigo/Datepicker.css\": 374,\n\t\"./cgu/Datepicker.css\": 375,\n\t\"./coles/Datepicker.css\": 376,\n\t\"./core/Datepicker.css\": 173,\n\t\"./nrma/Datepicker.css\": 377,\n\t\"./racv/Datepicker.css\": 378,\n\t\"./sgic/Datepicker.css\": 379,\n\t\"./sgio/Datepicker.css\": 380,\n\t\"./state/Datepicker.css\": 381,\n\t\"./wfi/Datepicker.css\": 382\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 372;","import { Select } from '../../chroma';\n\nimport React, { Component } from 'react';\n\nclass Dropdown extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      values: [{\n        label: \"Loading...\",\n        value: \"\"\n      }],\n      disabled: true\n    }\n  }\n\n  async componentDidMount() {\n    if (this.props.src) {\n      try {\n        const response = await fetch(this.props.src); // TODO: memoize data fetches\n        const data = await response.json();\n        return setTimeout(() => this.setState({ values: data, disabled: false }), 1000);\n      }\n      catch (err) {\n        return console.log(err);\n      }\n    }\n  }\n\n  render() {\n    return <Select {...this.props} values={this.state.values} className={this.state.disabled ? 'disable-select' : null} />;\n  }\n}\n\nexport default Dropdown;","import {\n  ActionList,\n  Alert,\n  Autocomplete,\n  BackedByIag,\n  Button,\n  ButtonGroup,\n  Card,\n  Checkbox,\n  Container,\n  Content,\n  DatePicker,\n  DetailList,\n  Footer,\n  Form,\n  FormContainer,\n  FormGroup,\n  FormMain,\n  GridColumn,\n  GridRow,\n  getAssetsPath,\n  Header,\n  Icon,\n  InlineLoader,\n  Input,\n  InputMask,\n  List,\n  Loader,\n  Main,\n  Modal,\n  Radio,\n  RadioBlock,\n  RadioButton,\n  Select,\n  Textarea\n} from '../chroma';\n\nimport Dropdown from '../components/Dropdown/Dropdown';\n\nexport default {\n  ActionList,\n  Alert,\n  Autocomplete,\n  BackedByIag,\n  Button,\n  ButtonGroup,\n  Card,\n  Checkbox,\n  Container,\n  Content,\n  DatePicker,\n  DetailList,\n  Dropdown,\n  Footer,\n  Form,\n  FormContainer,\n  FormGroup,\n  FormMain,\n  GridColumn,\n  GridRow,\n  getAssetsPath,\n  Header,\n  Icon,\n  InlineLoader,\n  Input,\n  InputMask,\n  List,\n  Loader,\n  Main,\n  Modal,\n  Radio,\n  RadioBlock,\n  RadioButton,\n  Select,\n  Textarea\n}","import { createElement, Fragment } from 'react';\nimport { FormGroup } from '../chroma';\nimport componentMap from '../utils/componentMap';\nimport _get from 'lodash/get';\n\nexport const generateForm = (schema, form, onUpdate, errors) => {\n  const processNode = schema => {\n    if (Array.isArray(schema)) {\n      return createElement(Fragment, {}, ...schema.map(x => processNode(x)))\n    } else if (schema.groupId) {\n      return createElement(Fragment, null, createElement('h4', null, schema.label), processNode(schema.elements));\n    } else {\n      return componentMap[schema.widget] && (!schema.showIf || _get(form, schema.showIf.id) === schema.showIf.value) ? createElement(FormGroup, { label: schema.label, error: _get(errors, schema.id), for: schema.id }, createElement(componentMap[schema.widget], {\n        id: schema.id,\n        name: schema.id,\n        value: _get(form, schema.id, ''),\n        onChange: (payload, date) => onUpdate(schema.id, _get(payload, 'target.value') || date),\n        placeholder: schema.defaultValue,\n        className: 'u-mar-b--3',\n        values: schema.values,\n        src: schema.src\n      })) : null;\n    }\n  };\n  return processNode(schema);\n}\n","import PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport Slider from 'react-slick/lib';\n\n\nclass FlowSlider extends Component {\n\n  constructor (props) {\n    super(props);\n\n    this.sliderSettings = {\n      accessibility: false, //prevents keyboard navigation\n      arrows: false,\n      dots: false,\n      infinite: false,\n      initialSlide: props.step,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      swipe: false,\n      swipeToSlide: false,\n      touchMove: false,\n      variableWidth: true\n    };\n  }\n\n  componentDidUpdate (prevProps) {\n    if (this.props.step !== prevProps.step) {\n      this.slider.slickGoTo(this.props.step);\n    }\n  }\n\n  render () {\n    const {children, step} = this.props;\n    return (\n      <Slider ref={slider => (this.slider = slider)} {...this.sliderSettings}>\n        {children.map((container, index) => {\n          return (\n            <div aria-hidden={step !== index} key={`slide${index}`} style={{ width: 600}}>\n              {step === index && container}\n            </div>\n          );\n        })}\n      </Slider>\n    );\n  }\n}\n\nFlowSlider.propTypes = {\n  children: PropTypes.node.isRequired,\n  step: PropTypes.number.isRequired\n};\n\nexport default FlowSlider;\n","export default {\n  SCHEMA: {\n    ERROR: 'SCHEMA.ERROR',\n    LOAD: 'SCHEMA.LOAD',\n    UPDATE: 'SCHEMA.UPDATE',\n  },\n  FORM: {\n    CLEAR: 'FORM.CLEAR',\n    MOVE_NEXT: 'FORM.MOVE_NEXT',\n    MOVE_BACK: 'FORM.MOVE_BACK',\n    UPDATE: {\n      INPUT: 'FORM.UPDATE.INPUT',\n      STEP: 'FORM.UPDATE.STEP'\n    },\n    VALIDATE: 'FORM.VALIDATE',\n    VALIDATE_FAIL: 'FORM.VALIDATE_FAIL'\n  }\n}","import {createAction} from 'redux-actions';\nimport ActionTypes from '../constants/actionTypes';\n\nexport const clearForm = createAction(ActionTypes.FORM.CLEAR);\nexport const updateForm = createAction(ActionTypes.FORM.UPDATE.INPUT);\nexport const updateStep = createAction(ActionTypes.FORM.UPDATE.STEP);\nexport const moveBack = createAction(ActionTypes.FORM.MOVE_BACK)\nexport const validateForm = createAction(ActionTypes.FORM.VALIDATE);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Alert, ButtonGroup, Button } from '../chroma';\nimport { generateForm } from '../utils/dynamicFormUtils';\nimport _get from 'lodash/get';\n\nimport FlowSlider from '../components/FlowSlider/FlowSlider';\n\nimport { moveBack, updateForm, validateForm } from '../actions/formActions';\n\nclass App extends Component {\n\n  renderAlert = () => (\n    <Alert id=\"successLozenge\" icon=\"icon__attention\" type={this.props.valid ? 'success' : 'warning'} className=\"u-mar-b--3\" inline >\n      <p>{this.props.valid ? 'Valid schema' : 'Enter a valid schema or select a schema to load'}</p>\n    </Alert>\n  )\n  render() {\n\n    if (!this.props.valid) {\n      return this.renderAlert();\n    }\n\n    if (Array.isArray(this.props.schema) && this.props.schema.length > 0 && _get(this.props.schema, '[0].pageId')) {\n      return (\n        <FlowSlider step={this.props.step}>\n          {this.props.schema.map((page, i) => (\n            <div style={{ minHeight: 500 }} key={i}>\n              {generateForm(page.content, this.props.form, this.props.onUpdateForm, this.props.errors)}\n              <ButtonGroup className=\"u-align-items--center u-justify-content--center\">\n                <Button tracking=\"eg1\" onClick={() => this.props.onMoveBack()} tertiary outline disabled={this.props.step - 1 < 0}>\n                  Back\n                </Button>\n                <Button name=\"eg2\" onClick={() => this.props.onValidateForm(this.props.step)} primary disabled={this.props.step + 1 > this.props.schema.length - 1}>\n                  Next\n                </Button>\n              </ButtonGroup>\n            </div>)\n          )}\n        </FlowSlider>\n      )\n    }\n    return generateForm(this.props.schema, this.props.form, this.props.onUpdateForm)\n  };\n}\n\nconst mapStateToProps = ({ form, schema }) => {\n  return {\n    errors: form.errors,\n    form: form.input,\n    step: form.step,\n    schema: schema.parsedSchema,\n    valid: schema.valid\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onUpdateForm: (path, data) => dispatch(updateForm({ path, data })),\n  onMoveBack: step => dispatch(moveBack(step)),\n  onValidateForm: step => dispatch(validateForm(step))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport './ProgressBar.scss';\n\n\nconst ProgressBar = ({currentStep, initialPercentage, totalSteps}) => {\n\n    const progress = Math.max(initialPercentage, Math.min((currentStep / (totalSteps - 1)) * 100, 100));\n\n    return (\n        <div className=\"ProgressBar\">\n            <div className=\"ProgressBar--bar\">\n                <div style={{width: progress + '%'}}/>\n            </div>\n        </div>\n    );\n};\n\nProgressBar.propTypes = {\n    currentStep: PropTypes.number,\n    initialPercentage: PropTypes.number,\n    totalSteps: PropTypes.number.isRequired\n};\n\nProgressBar.defaultProps = {\n    currentStep: 0,\n    initialPercentage: 0\n};\n\nexport default ProgressBar;\n","import {createAction} from 'redux-actions';\nimport ActionTypes from '../constants/actionTypes';\n\nexport const updateSchema = createAction(ActionTypes.SCHEMA.UPDATE);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.scss';\n\nimport { Button, ButtonGroup, Header, Textarea } from '../src/chroma';\nimport ChromaDynamicForm from './containers/ChromaDynamicForm';\nimport ProgressBar from './components/ProgressBar/ProgressBar';\n\nimport sample1 from './mocks/schemas/sample_1.json';\nimport sample2 from './mocks/schemas/sample_2.json';\nimport sample3 from './mocks/schemas/sample_3.json';\nimport { updateSchema } from './actions/schemaActions';\nimport { clearForm } from './actions/formActions';\n\nclass App extends Component {\n\n  renderProgressBar() {\n    let parsedSchema;\n    let valid;\n    try {\n      parsedSchema = JSON.parse(this.props.schema);\n      valid = true;\n    }\n    catch (e) {\n      valid = false;\n    }\n    if (valid && Array.isArray(parsedSchema) && parsedSchema[0].pageId) {\n      return <ProgressBar totalSteps={parsedSchema.length} currentStep={this.props.form.step} initialPercentage={2} sectionCompleteIcon={'tick-invert'} />\n    }\n    return null\n  }\n\n  render() {\n    return (\n      <div>\n        <Header title=\"Chroma Dynamic Forms\" brand={'nrma'} />\n        {this.renderProgressBar()}\n        <div className=\"App\">\n          <div className=\"container bg-grey u-border-radius--4 u-mar--8\">\n            <div className=\"row u-mar-x--7 u-mar-y--8\">\n              <div className=\"col\">\n                <div className=\"bg-grey u-text--center\">\n                  <h2>Schema</h2>\n                </div>\n                <div className=\"bg-grey u-text--center u-mar-b--6 code\">\n                  <Textarea\n                    id=\"textarea\"\n                    rows={8}\n                    onChange={this.props.onSchemaUpdate}\n                    value={this.props.schema}\n                  />\n                </div>\n                <ButtonGroup className=\"u-align-items--center u-justify-content--center\">\n                  <Button tracking=\"eg1\" onClick={() => this.props.onSchemaUpdate({ target: { value: JSON.stringify(sample1, null, 4) } })} primary>\n                    Simple Form\n                    </Button>\n                  <Button name=\"eg2\" onClick={() => this.props.onSchemaUpdate({ target: { value: JSON.stringify(sample2, null, 4) } })} primary>\n                    Pagination\n                    </Button>\n                  <Button name=\"eg3\" onClick={() => this.props.onSchemaUpdate({ target: { value: JSON.stringify(sample3, null, 4) } })} primary>\n                    Conditionals\n                    </Button>\n                </ButtonGroup>\n                <div className=\"bg-grey u-text--center u-mar-t--8\">\n                  <h2>Generated Payload</h2>\n                </div>\n                <div className=\"bg-grey u-text--left code u-mar-b--6\">\n                  <Textarea\n                    id=\"formoutput\"\n                    rows={8}\n                    value={JSON.stringify(this.props.form.input, null, 4)}\n                    readonly\n                  />\n                </div>\n                <ButtonGroup className=\"u-align-items--center u-justify-content--center u-mar-b--8\">\n                  <Button tracking=\"clearForm\" onClick={() => this.props.onClearForm()} primary>\n                    Reset Form\n                  </Button>\n                </ButtonGroup>\n              </div>\n              <div className=\"col\">\n                <div className=\"bg-grey u-text--center\">\n                  <h2>Dynamic Form</h2>\n                </div>\n                <div className=\"bg-grey u-text--left\">\n                  <ChromaDynamicForm />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ form, schema }) => ({\n  form,\n  schema: schema.rawSchema\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSchemaUpdate: ({ target: { value } }) => dispatch(updateSchema(value)),\n  onClearForm: () => dispatch(clearForm()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const getFormInput = state => state.form.input;\nexport const getParsedSchema = state => state.schema.parsedSchema;","import _get from 'lodash/get';\nimport _set from 'lodash/set';\n\nexport const validateForm = (item, input) => {\n  let errors = {};\n  const validateNode = item => {\n    if (Array.isArray(item)) {\n      return item.map(x => validateNode(x));\n    }\n    if (item.groupId) {\n      return item.elements.map(x => validateNode(x));\n    }\n    if (item.showIf && !(_get(input, item.showIf.id) === item.showIf.value)) {\n      return\n    }\n    if (item.validation && item.validation.required && !_get(input, item.id)) {\n      return _set(errors, item.id, 'This field is required');\n    }\n    if (item.validation && item.validation.pattern) {\n      const regex = new RegExp(item.validation.pattern)\n      if (!regex.test(_get(input, item.id))) {\n        return _set(errors, item.id, `Failed to match regex ${item.validation.pattern}`);\n      }\n    }\n    if (item.validation && item.validation.minLength && _get(input, item.id).length < item.validation.minLength) {\n      return _set(errors, item.id, `Failed to meet minimum length of ${item.validation.minLength} characters`);\n    }\n    if (item.validation && item.validation.maxLength && _get(input, item.id).length > item.validation.maxLength) {\n      return _set(errors, item.id, `Please limit input to ${item.validation.maxLength} characters`);\n    }\n  }\n  validateNode(item);\n  return Object.keys(errors).length > 0 ? errors : null;\n}\n","import { put, select, takeLatest } from 'redux-saga/effects';\nimport _get from 'lodash/get';\n\nimport ActionTypes from '../constants/actionTypes';\nimport { getFormInput, getParsedSchema } from '../utils/stateSelectors';\nimport { validateForm } from '../validation/formValidation';\n\nfunction* doValidateForm(action) {\n  const input = yield select(getFormInput);\n  const schema = yield select(getParsedSchema);\n\n  if (Number.isInteger(action.payload) && schema[action.payload].pageId) {\n    const page = schema[action.payload].content;\n    const errors = validateForm(page, input);\n\n    if (errors) {\n      yield put({ type: ActionTypes.FORM.VALIDATE_FAIL, payload: errors });\n    } else {\n      yield put({ type: ActionTypes.FORM.MOVE_NEXT, payload: action.payload });\n    }\n  }\n}\n\nexport function* form() {\n  yield takeLatest(ActionTypes.FORM.VALIDATE, doValidateForm);\n}\n\nfunction* doMoveNext(action) {\n  const input = yield select(getFormInput);\n  const schema = yield select(getParsedSchema);\n  let nextStep = action.payload + 1;\n\n  const shouldSkipStep = step => {\n    const showIf = schema[step].showIf;\n    if (showIf) {\n      if (!(_get(input, showIf.id) === showIf.value)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  while (shouldSkipStep(nextStep)) {\n    nextStep++;\n  }\n\n  yield put({ type: ActionTypes.FORM.UPDATE.STEP, payload: nextStep });\n}\n\nexport function* moveNext() {\n  yield takeLatest(ActionTypes.FORM.VALIDATE, doMoveNext);\n}","import { put, takeLatest } from 'redux-saga/effects';\n\nimport ActionTypes from '../constants/actionTypes';\n\nfunction* doLoadSchema(action) {\n  let parsedSchema;\n  let valid;\n  try {\n    parsedSchema = JSON.parse(action.payload);\n    valid = true;\n  }\n  catch (e) {\n    valid = false;\n  }\n  if (valid) {\n    yield put({ type: ActionTypes.SCHEMA.LOAD, payload: parsedSchema });\n  } else {\n    yield put({ type: ActionTypes.SCHEMA.ERROR });\n  }\n}\n\nexport function* loadSchema() {\n  yield takeLatest(ActionTypes.SCHEMA.UPDATE, doLoadSchema);\n}\n","import { all, fork } from 'redux-saga/effects';\n\nimport { form, moveNext } from './form';\nimport { loadSchema } from './schema';\n\nexport default function* rootSaga() {\n  yield all([\n    fork(form),\n    fork(loadSchema),\n    fork(moveNext)\n  ]);\n}\n","import {\n  set as _setFp,\n} from 'lodash/fp';\n\nimport ActionTypes from '../constants/actionTypes';\n\nconst initialState = {\n  errors: null,\n  input: {},\n  step: 0,\n  visitedSteps: []\n};\n\nexport default function formReducer (state = initialState, {type, payload}) {\n\n  switch (type) {\n\n    case ActionTypes.FORM.CLEAR: {\n      return initialState;\n    }\n\n    case ActionTypes.FORM.UPDATE.INPUT: {\n      return _setFp(`input.${payload.path}`, payload.data, state);\n    }\n\n    case ActionTypes.FORM.UPDATE.STEP: {\n      return {\n        ...state,\n        step: payload,\n        visitedSteps: [...state.visitedSteps, state.step],\n        errors: null\n      }\n    }\n\n    case ActionTypes.FORM.MOVE_BACK: {\n      return {\n        ...state,\n        step: state.visitedSteps[state.visitedSteps.length - 1],\n        visitedSteps: state.visitedSteps.slice(0, state.visitedSteps.length - 1)\n      }\n    }\n\n    case ActionTypes.FORM.VALIDATE_FAIL: {\n      return {\n        ...state,\n        errors: payload\n      }\n    }\n\n    default:\n      return state;\n  }\n\n}\n","import ActionTypes from '../constants/actionTypes';\n\nconst initialState = {\n  rawSchema: '',\n  parsedSchema: null,\n  valid: null\n};\n\n\nexport default function schemaReducer(state = initialState, { type, payload }) {\n\n  switch (type) {\n\n    case ActionTypes.SCHEMA.UPDATE: {\n      return {\n        ...state,\n        rawSchema: payload\n      };\n    }\n\n    case ActionTypes.SCHEMA.LOAD: {\n      return {\n        ...state,\n        parsedSchema: payload,\n        valid: true\n      };\n    }\n\n    case ActionTypes.SCHEMA.ERROR: {\n      return {\n        ...state,\n        valid: false\n      };\n    }\n\n    default:\n      return state;\n  }\n\n}\n","import { combineReducers } from 'redux';\n\nimport form from './formReducer';\nimport schema from './schemaReducer';\nexport default combineReducers({\n  form,\n  schema\n});\n","import {createStore, compose, applyMiddleware} from 'redux';\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootSaga from '../sagas';\nimport rootReducer from '../reducers';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nfunction configureStoreProd (initialState) {\n  const middlewares = [\n    sagaMiddleware\n  ];\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\n  const store = createStore(rootReducer, initialState, composeEnhancers(\n    applyMiddleware(...middlewares))\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}\n\nfunction configureStoreDev (initialState) {\n  const middlewares = [\n    reduxImmutableStateInvariant(),\n    sagaMiddleware\n  ];\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\n  const store = createStore(rootReducer, initialState, composeEnhancers(\n    applyMiddleware(...middlewares)\n  ));\n\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', () => {\n      const nextReducer = require('../reducers').default; // eslint-disable-line global-require\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}\n\nconst configureStore = process.env.NODE_ENV === 'production' ? configureStoreProd : configureStoreDev;\n\nexport default configureStore;\n","import React from 'react';\nimport { Provider } from 'react-redux'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './store/configureStore';\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}